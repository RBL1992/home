{"ast":null,"code":"export function filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,aAAa,CAC3BC,KAAU,EACVC,IAA0B,EAC1BC,OAAa;EAEb,IAAIC,MAAM,GAAG,CAAC;EACdH,KAAK,CAACI,OAAO,CAAC,UAAUC,IAAI,EAAEC,CAAC;IAC7B,IAAIL,IAAI,CAACM,IAAI,CAAC,IAAI,EAAEF,IAAI,EAAEC,CAAC,EAAEN,KAAK,CAAC,EAAE;MACnCA,KAAK,CAACG,MAAM,EAAE,CAAC,GAAGE,IAAI;;EAE1B,CAAC,EAAEH,OAAO,CAAC;EACXF,KAAK,CAACQ,MAAM,GAAGL,MAAM;EACrB,OAAOH,KAAK;AACd","names":["filterInPlace","array","test","context","target","forEach","elem","i","call","length"],"sourceRoot":"","sources":["../../../src/utilities/common/filterInPlace.ts"],"sourcesContent":["export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}