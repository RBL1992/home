{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\nvar HttpLink = function (_super) {\n  __extends(HttpLink, _super);\n  function HttpLink(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = _super.call(this, createHttpLink(options).request) || this;\n    _this.options = options;\n    return _this;\n  }\n  return HttpLink;\n}(ApolloLink);\nexport { HttpLink };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAwB,kBAAU;AAErD,SAASC,cAAc,QAAQ,qBAAmB;AAElD;EAA8BC;EAE5B,kBAAmBC,OAAyB;IAAzB;MAAAA,YAAyB;IAAA;IAA5C,YACEC,kBAAMH,cAAc,CAACE,OAAO,CAAC,CAACE,OAAO,CAAC;IADrBC,aAAO,GAAPH,OAAO;;EAE1B;EACF,eAAC;AAAD,CAAC,CAL6BH,UAAU","names":["ApolloLink","createHttpLink","__extends","options","_super","request","_this"],"sourceRoot":"","sources":["../../../src/link/http/HttpLink.ts"],"sourcesContent":["import { ApolloLink, RequestHandler } from '../core';\nimport { HttpOptions } from './selectHttpOptionsAndBody';\nimport { createHttpLink } from './createHttpLink';\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}