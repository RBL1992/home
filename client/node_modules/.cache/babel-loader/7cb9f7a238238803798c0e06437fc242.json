{"ast":null,"code":"export var selectURI = function (operation, fallbackURI) {\n  var context = operation.getContext();\n  var contextURI = context.uri;\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return fallbackURI || '/graphql';\n  }\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,SAAS,GAAG,UACvBC,SAAoB,EACpBC,WAAyD;EAEzD,IAAMC,OAAO,GAAGF,SAAS,CAACG,UAAU,EAAE;EACtC,IAAMC,UAAU,GAAGF,OAAO,CAACG,GAAG;EAE9B,IAAID,UAAU,EAAE;IACd,OAAOA,UAAU;GAClB,MAAM,IAAI,OAAOH,WAAW,KAAK,UAAU,EAAE;IAC5C,OAAOA,WAAW,CAACD,SAAS,CAAC;GAC9B,MAAM;IACL,OAAQC,WAAsB,IAAI,UAAU;;AAEhD,CAAC","names":["selectURI","operation","fallbackURI","context","getContext","contextURI","uri"],"sourceRoot":"","sources":["../../../src/link/http/selectURI.ts"],"sourcesContent":["import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n"]},"metadata":{},"sourceType":"module"}