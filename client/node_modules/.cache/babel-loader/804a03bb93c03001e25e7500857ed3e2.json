{"ast":null,"code":"export var throwServerError = function (response, result, message) {\n  var error = new Error(message);\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};","map":{"version":3,"mappings":"AAMA,OAAO,IAAMA,gBAAgB,GAAG,UAC9BC,QAAkB,EAClBC,MAAW,EACXC,OAAe;EAEf,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,OAAO,CAAgB;EAC/CC,KAAK,CAACE,IAAI,GAAG,aAAa;EAC1BF,KAAK,CAACH,QAAQ,GAAGA,QAAQ;EACzBG,KAAK,CAACG,UAAU,GAAGN,QAAQ,CAACO,MAAM;EAClCJ,KAAK,CAACF,MAAM,GAAGA,MAAM;EACrB,MAAME,KAAK;AACb,CAAC","names":["throwServerError","response","result","message","error","Error","name","statusCode","status"],"sourceRoot":"","sources":["../../../src/link/utils/throwServerError.ts"],"sourcesContent":["export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n"]},"metadata":{},"sourceType":"module"}